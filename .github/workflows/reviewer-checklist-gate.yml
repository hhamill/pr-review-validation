name: Reviewer Checklist (on approval)

on:
  pull_request_review:
    types: [submitted]   # fires only when a review is submitted (approve/comment/request-changes)

permissions:
  contents: read
  pull-requests: write   # needed to post a "REQUEST_CHANGES" review

jobs:
  enforce:
    if: ${{ github.event.review.state == 'approved' }}   # run only on Approve
    runs-on: ubuntu-latest
    steps:
      - name: Enforce reviewer checklist
        uses: actions/github-script@v7
        with:
          script: |
            // context, core, github are injected by github-script
            const pr = context.payload.pull_request;
            const body = pr?.body || '';

            // Hidden markers define the enforcement scope
            const start = /<!--\s*REVIEWER_CHECKLIST:START\s*-->/i;
            const end   = /<!--\s*REVIEWER_CHECKLIST:END\s*-->/i;

            const hasMarkers = start.test(body) && end.test(body);
            if (!hasMarkers) {
              // Flip the approval into "changes requested"
              await github.rest.pulls.createReview({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: pr.number,
                event: 'REQUEST_CHANGES',
                body: '❌ Reviewer checklist block is missing. Please restore the section between REVIEWER_CHECKLIST:START/END.'
              });
              core.setFailed('Checklist block missing.');
              return;
            }

            const section = body.split(start)[1].split(end)[0];

            // Count unchecked tasks within the block; accept "-" or "*" bullets
            const unchecked = (section.match(/^[\s>*-]*[\*\-]\s*\[\s\]\s+/gmi) || []).length;
            const anyTask = /[\*\-]\s*\[\s*[xX ]\s*\]\s+/.test(section);

            if (!anyTask) {
              await github.rest.pulls.createReview({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: pr.number,
                event: 'REQUEST_CHANGES',
                body: '❌ Checklist block found, but no tasks inside. Please add the items.'
              });
              core.setFailed('Checklist empty.');
              return;
            }

            if (unchecked > 0) {
              await github.rest.pulls.createReview({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: pr.number,
                event: 'REQUEST_CHANGES',
                body: `❌ Reviewer checklist incomplete: ${unchecked} item(s) unchecked. Please complete the checklist in the PR description.`
              });
              core.setFailed(`Checklist incomplete: ${unchecked} unchecked item(s).`);
              return;
            }

            core.info('Checklist complete ✅ (approval stands)');
